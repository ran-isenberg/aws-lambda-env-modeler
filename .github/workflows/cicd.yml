# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Library CI/CD

permissions:
  id-token: write # This is required for requesting the JWT
  issues: write
  checks: read
  contents: read

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8.17, 3.9, "3.10", "3.11", "3.12"]
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{  runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Set up with Python ${{ matrix.python-version }}
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip pre-commit poetry
          make deps
          pip install -r lib_requirements.txt
      - name: pre commit
        run: |
          make pre-commit
      - name: Lint with flake8 and mypy
        run: |
          make lint
      - name: Complexity scan
        run: |
          make complex
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Unit tests
        run: |
          make pipeline-tests
      - name: Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        with:
          files: ./coverage.xml
          name: aws-lambda-env-parser-codecov
          fail_ci_if_error: false # optional (default = false)
          verbose: false # optional (default = false)
          token: ${{ secrets.CODECOV_TOKEN }}

  generate_docs_on_main:
    name: generate_docs_on_main
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write # for docs push
    if: contains('refs/heads/main', github.ref)
    steps:
      - name: Check out repository code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Set up Python 3.12
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          pip install --upgrade pip poetry
          make deps
          pip install -r lib_requirements.txt
      - name: Generate docs
        run: |
          mkdocs gh-deploy --force
